name: 🔍 Code Quality Check

on:
  push:
    branches: [ main, dev, feature/* ]
  pull_request:
    branches: [ main, dev ]

jobs:
  check:
    name: 🚀 Build & Quality Check
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          # 获取完整历史
          fetch-depth: 0

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: 📚 Install Dependencies
        run: pnpm install --frozen-lockfile

      - name:  Code Quality Check
        run: |
          echo "🔍 运行代码质量检查..."
          pnpm lint
          pnpm format:check
          echo "✅ 代码质量检查完成"

      - name: 🏗️ Build with Timer
        run: |
          echo "🚀 开始构建检查..."
          pnpm build:timer
          echo "✅ 构建检查完成"

      - name: 📊 Build Summary
        if: always()
        run: |
          echo "📈 构建结果汇总"
          echo "=================================="
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ 所有检查通过！"
            echo "🎉 代码质量良好，构建成功"
          else
            echo "❌ 检查失败！"
            echo "💡 请修复上述问题后重新提交"
          fi
          echo "=================================="

  # 仅在主分支构建时运行额外的检查
  extended-check:
    name: 🔬 Extended Check
    runs-on: ubuntu-latest
    needs: check
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: 📚 Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔄 Sync All Documentation
        run: |
          echo "🔄 同步所有文档..."
          pnpm sync:all
          echo "✅ 文档同步完成"

      - name: 📊 Generate Statistics
        run: |
          echo "📊 生成统计信息..."
          echo "API 文档统计："
          pnpm sync:status
          
          echo ""
          echo "文件统计："
          find docs/zh -name "*.md" | wc -l | xargs echo "中文文档数量："
          find docs/en -name "*.md" | wc -l | xargs echo "英文文档数量："
          
          echo ""
          echo "翻译进度："
          pnpm translate:status || echo "翻译状态检查完成"

      - name: 🎯 Performance Check
        run: |
          echo "🎯 性能检查..."
          echo "构建产物大小："
          if [ -d "docs/.vitepress/dist" ]; then
            du -sh docs/.vitepress/dist
          else
            echo "构建产物目录不存在"
          fi
