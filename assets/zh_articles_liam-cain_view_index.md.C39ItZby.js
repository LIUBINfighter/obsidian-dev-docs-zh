import{_ as e,c as i,o as r,S as t}from"./chunks/framework.Cc8IF7p9.js";const b=JSON.parse('{"title":"索引","description":"","frontmatter":{"title":"索引","source":"https://liamca.in/Obsidian/Plugin+Review+Guide/index","created":"2025-03-26T00:00:00.000Z","tags":["clippings"]},"headers":[],"relativePath":"zh/articles/liam-cain/view/index.md","filePath":"zh/articles/liam-cain/view/index.md","lastUpdated":1756588316000}'),o={name:"zh/articles/liam-cain/view/index.md"};function l(n,a,d,h,s,c){return r(),i("div",null,[...a[0]||(a[0]=[t('<h1 id="obsidian-插件审查指南" tabindex="-1">Obsidian 插件审查指南 <a class="header-anchor" href="#obsidian-插件审查指南" aria-label="Permalink to &quot;Obsidian 插件审查指南&quot;">​</a></h1><p>审查 Obsidian 插件时，主要关注点应是确保插件功能正常且不会破坏与应用程序或其他插件的兼容性。</p><h2 id="要求" tabindex="-1">要求 <a class="header-anchor" href="#要求" aria-label="Permalink to &quot;要求&quot;">​</a></h2><h3 id="检查可能导致数据丢失的情况" tabindex="-1">检查可能导致数据丢失的情况 <a class="header-anchor" href="#检查可能导致数据丢失的情况" aria-label="Permalink to &quot;检查可能导致数据丢失的情况&quot;">​</a></h3><p>数据丢失是失去用户信任的最快方式。虽然用户通过启用社区创建的插件承担了一定风险，但数据丢失（即使由插件引起）会损害 Obsidian 的形象，并让用户对安装其他插件产生顾虑。因此，特别需要彻底审查和评估修改用户数据的插件。</p><h4 id="常见陷阱" tabindex="-1">常见陷阱 <a class="header-anchor" href="#常见陷阱" aria-label="Permalink to &quot;常见陷阱&quot;">​</a></h4><h5 id="插件是否将过时数据写入磁盘" tabindex="-1">插件是否将过时数据写入磁盘？ <a class="header-anchor" href="#插件是否将过时数据写入磁盘" aria-label="Permalink to &quot;插件是否将过时数据写入磁盘？&quot;">​</a></h5><p>这可能是由于使用 <code>cachedRead</code> 然后将结果写回磁盘引起的。同时注意读取数据、修改数据和将数据写回磁盘之间的时间间隔。</p><h3 id="安全漏洞" tabindex="-1">安全漏洞 <a class="header-anchor" href="#安全漏洞" aria-label="Permalink to &quot;安全漏洞&quot;">​</a></h3><p>插件是否在用户不知情的情况下将用户数据发送给第三方服务？</p><h3 id="检查明显的逻辑错误" tabindex="-1">检查明显的逻辑错误 <a class="header-anchor" href="#检查明显的逻辑错误" aria-label="Permalink to &quot;检查明显的逻辑错误&quot;">​</a></h3><p>本节是一个总括，意思是：&quot;提供彻底的代码审查&quot;。插件是否正确处理边缘情况？行为是否符合预期？</p><h2 id="建议" tabindex="-1">建议 <a class="header-anchor" href="#建议" aria-label="Permalink to &quot;建议&quot;">​</a></h2><h3 id="避免使用私有-api" tabindex="-1">避免使用私有 API <a class="header-anchor" href="#避免使用私有-api" aria-label="Permalink to &quot;避免使用私有 API&quot;">​</a></h3><p>如果 API 未公开（即不在 API 规范中），建议插件作者不要使用它。注意用户将 <code>app</code> 强制转换为 <code>any</code> 并深入 Obsidian 内部的情况。</p><h3 id="偏好简单性" tabindex="-1">偏好简单性 <a class="header-anchor" href="#偏好简单性" aria-label="Permalink to &quot;偏好简单性&quot;">​</a></h3><p>如果 Obsidian API 中已存在实用程序，建议用户使用它而不是自己重新实现。一些常见例子包括：</p><ul><li><strong>日期格式化</strong>。Obsidian 捆绑了 Moment.js，为了方便和一致性，建议用户使用它而不是导入新库或尝试自己格式化日期字符串。</li><li><strong>防抖</strong> Obsidian 提供了一个简单的 <code>debounce</code> 实用程序，作者可以使用它来节流函数，而无需使用 setTimeout。</li></ul><h3 id="速度" tabindex="-1">速度 <a class="header-anchor" href="#速度" aria-label="Permalink to &quot;速度&quot;">​</a></h3><p>注意可能影响 Obsidian 性能的操作。</p><h3 id="类型安全" tabindex="-1">类型安全 <a class="header-anchor" href="#类型安全" aria-label="Permalink to &quot;类型安全&quot;">​</a></h3><p>虽然不是要求，但建议插件使用 Typescript 而不是原生 Javascript，因为它提供了额外的类型检查。这不仅有助于插件作者，也使审查插件更容易！</p><h3 id="代码清晰度" tabindex="-1">代码清晰度 <a class="header-anchor" href="#代码清晰度" aria-label="Permalink to &quot;代码清晰度&quot;">​</a></h3><p>没有正式的插件样式指南。也就是说，插件应该是可读的。代码格式化工具在这方面有很大帮助。</p><p>如果插件的格式妨碍了审查能力，请要求他们使用 <a href="https://prettier.io/" target="_blank" rel="noreferrer">Prettier</a> 等工具进行格式化。</p><h3 id="插件最佳实践" tabindex="-1">插件最佳实践 <a class="header-anchor" href="#插件最佳实践" aria-label="Permalink to &quot;插件最佳实践&quot;">​</a></h3><p>Obsidian 插件开发者目前正在为其他开发者编制最佳实践列表。<a href="https://liamca.in/Obsidian/Plugin+Review+Guide/#TODO" target="_blank" rel="noreferrer">#TODO</a></p><p>目前，可以参考 <a href="https://liamca.in/Obsidian/API+FAQ/index" target="_blank" rel="noreferrer">API FAQ</a>，它提供了更多关于 API 的说明和示例代码片段。</p><h2 id="非问题" tabindex="-1">非问题 <a class="header-anchor" href="#非问题" aria-label="Permalink to &quot;非问题&quot;">​</a></h2><h3 id="竞争" tabindex="-1">竞争 <a class="header-anchor" href="#竞争" aria-label="Permalink to &quot;竞争&quot;">​</a></h3><p>多个插件提供相同的功能是可以的。</p><h3 id="框架" tabindex="-1">框架 <a class="header-anchor" href="#框架" aria-label="Permalink to &quot;框架&quot;">​</a></h3><p>作者可以自由地为他们的插件使用外部库和框架。</p><h2 id="如何编写代码审查" tabindex="-1">如何编写代码审查 <a class="header-anchor" href="#如何编写代码审查" aria-label="Permalink to &quot;如何编写代码审查&quot;">​</a></h2><ul><li>如果要审查 PR，请在原帖上使用 👀 表情表示你正在审查。</li><li>将代码审查保留在 <code>obsidian-releases</code> PR 正文中。</li><li>从 <code>main</code> 分支，确保使用 &quot;Copy Permalink&quot; 引用有问题的代码行，这样如果向仓库推送新提交，链接不会失效。</li></ul>',35)])])}const u=e(o,[["render",l]]);export{b as __pageData,u as default};
